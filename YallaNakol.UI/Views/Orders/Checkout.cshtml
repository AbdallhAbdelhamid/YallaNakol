@model YallaNakol.UI.ViewModels.CheckoutViewModel

@{
    ViewData["Title"] = "Checkout";
}

<h2>Checkout</h2>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Checkout">
            @Html.AntiForgeryToken();

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Order.FirstName" class="control-label"></label>
                <input asp-for="Order.FirstName" class="form-control" />
                <span asp-validation-for="Order.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.LastName" class="control-label"></label>
                <input asp-for="Order.LastName" class="form-control" />
                <span asp-validation-for="Order.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.AddressLine1" class="control-label"></label>
                <input asp-for="Order.AddressLine1" class="form-control" />
                <span asp-validation-for="Order.AddressLine1" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.AddressLine2" class="control-label"></label>
                <input asp-for="Order.AddressLine2" class="form-control" />
                <span asp-validation-for="Order.AddressLine2" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.City" class="control-label"></label>
                <select asp-for="Order.City" asp-items="@Model.ResturantDeliveryAreas" class="form-control">
                </select>
                <span asp-validation-for="Order.City" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.PhoneNumber" class="control-label"></label>
                <input asp-for="Order.PhoneNumber" class="form-control" />
                <span asp-validation-for="Order.PhoneNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Order.Email" class="control-label"></label>
                <input asp-for="Order.Email" class="form-control" />
                <span asp-validation-for="Order.Email" class="text-danger"></span>
            </div>
            <div class="form-group ">
                <input type="submit" value="Create" class="btn btn-default " />
            </div>
        </form>
    </div>
    <div class="col-md-4" id="map">
        
    </div>
</div>

<div>
    <a asp-action="Index">Back</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places&amp;key=AIzaSyBmnATbcsItV07AIzYhG-6E0ZYgZgTkh3w"></script>
<script>
    var address;
    var lat; 
    var lng;
    var map = document.querySelector("#map");
    //get position
    navigator.geolocation.getCurrentPosition(
    function (e)
    {
            myMap = new google.maps.Map(map, {
                center: {
                    lat: e.coords.latitude,
                    lng: e.coords.longitude
                }
            });
            var marker = new google.maps.Marker({
                position: { lat: e.coords.latitude, lng: e.coords.longitude },
                map: myMap,
            });
             lat = e.coords.latitude;
             lng = e.coords.longitude;
    }, function () { console.log("Error") });
    
    var geocoder = new google.maps.Geocoder();
    var latlng = new google.maps.LatLng(lat, lng);
    geocoder.geocode({ location: latlng }, function (results, status) {

        if (status == google.maps.GeocoderStatus.OK)
        {
            address = results[0].formatted_address.split(',');
            console.log(results);
            console.log(address);
        }
    });
</script>
